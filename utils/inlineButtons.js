const { Markup } = require('telegraf')

const checkOneMnemonic_button = Markup.inlineKeyboard([
  Markup.button.callback('üß§ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–¥–Ω—É —Ñ—Ä–∞–∑—É', 'check_one_mnemonic'),
])

const stopMnemonicInput_button = Markup.inlineKeyboard([
  Markup.button.callback('‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–≤–æ–¥ —Ñ—Ä–∞–∑—ã', 'stop_mnemonic_input'),
])

const stopAddUser_button = Markup.inlineKeyboard([
  Markup.button.callback(
    '‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'stop_add_user'
  ),
])

const addUser_button = Markup.inlineKeyboard([
  Markup.button.callback('üë® –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'add_user'),
])

const deleteUser_button = Markup.inlineKeyboard([
  Markup.button.callback('üíÄ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'delete_user'),
])

const stopDeleteUser_button = Markup.inlineKeyboard([
  Markup.button.callback(
    '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    'stop_delete_user'
  ),
])

const makeNewsletter_button = Markup.inlineKeyboard([
  Markup.button.callback('üì® –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', 'make_newsletter'),
])

const stopNewsletter_button = Markup.inlineKeyboard([
  Markup.button.callback('‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞', 'stop_newsletter'),
])

const userButtons = Markup.inlineKeyboard([
  [
    Markup.button.callback('üß§ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–¥–Ω—É —Ñ—Ä–∞–∑—É', 'check_one_mnemonic'),
    Markup.button.callback(
      'ü§ë –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ—Ä–∞–∑',
      'check_many_mnemonics'
    ),
  ],
])

const adminButtons = Markup.inlineKeyboard([
  [
    Markup.button.callback('üë® –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'add_user'),
    Markup.button.callback('üíÄ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', 'delete_user'),
  ],
  [Markup.button.callback('üì® –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', 'make_newsletter')],
])

module.exports = {
  checkOneMnemonic_button,
  stopMnemonicInput_button,
  addUser_button,
  stopAddUser_button,
  deleteUser_button,
  stopDeleteUser_button,
  makeNewsletter_button,
  stopNewsletter_button,
  userButtons,
  adminButtons,
}