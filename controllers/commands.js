require('dotenv').config({ path: './config/.env' })

const ADMIN_ID = Number(process.env.ADMIN_ID)

const { getPool } = require('../database/initPool.js')

const { adminButtons, userButtons } = require('../utils/inlineButtons')

const botStart = async (ctx) => {
  const userTelegramID = ctx.message.from.id
  const pool = await getPool()
  const client = await pool.connect()
  const result = await new Promise((resolve, reject) => {
    client.query(
      `SELECT * FROM subscribed_users WHERE telegram_id = ${userTelegramID}`,
      (err, res) => {
        if (err) {
          reject(err)
        } else {
          resolve(res)
        }
      }
    )
  })
  if (result.rowCount > 0) {
    await ctx.replyWithHTML(
      `<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–µ–∫–µ—Ä —Å–∏–¥-—Ñ—Ä–∞–∑!</b>
      \n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ª—é–±—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ –≤—ã—à–µ, —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º`,
      userButtons
    )
    await client.end()
  } else {
    await ctx.replyWithHTML(
      `<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–µ–∫–µ—Ä —Å–∏–¥-—Ñ—Ä–∞–∑!</b>\n\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —É @bilbords_lzt`
    )
  }
}

const userPanel = async (ctx) => {
  ctx.reply(
    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–µ–∫–µ—Ä —Å–∏–¥–æ–∫! –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç',
    checkOneMnemonic_button
  )
}

const adminPanel = async (ctx) => {
  if (ctx.from.id === ADMIN_ID) {
    ctx.replyWithHTML(
      '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!</b>\n\n–í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º –Ω–∏–∂–µ',
      adminButtons
    )
  }
}

const helpText = async (ctx) => {
  ctx.reply(
    '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: \n\n/start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n/about - –æ –±–æ—Ç–µ\n/ruler - –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n\n–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, –Ω–∞–ø–∏—à–∏—Ç–µ @bilbords_lzt'
  )
}

const aboutText = async (ctx) => {
  ctx.reply(
    'Telegram-–±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ seed-—Ñ—Ä–∞–∑ –Ω–∞ –±–∞–ª–∞–Ω—Å\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ —É—Ç–æ—á–Ω—è—Ç—å —É @bilbords_lzt'
  )
}

const rulesText = async (ctx) => {
  ctx.reply(
    '–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö, –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è –ª–∏—à—å –ª–∏—á–Ω—ã–µ seed-—Ñ—Ä–∞–∑—ã\n–í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –Ω–µ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω, –æ–¥–Ω–∞–∫–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª—É—á–µ–Ω –∏—Å—Ö–æ–¥—è –∏–∑ –ª–∏—á–Ω–æ–π –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n–ü–æ–∫—É–ø–∞—è –¥–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç, –í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –æ–ø–∏—Å–∞–Ω–Ω—ã–º–∏ –≤—ã—à–µ –ø—Ä–∞–≤–∏–ª–∞–º–∏'
  )
}

const startGetMnemonic = (ctx) => {
  return ctx.scene.enter('get-mnemonic')
}

const leaveGetMnemonic = (ctx) => {
  return ctx.scene.leave('get-mnemonic')
}

const startGetManyMnemonic = (ctx) => {
  return ctx.scene.enter('')
}

const leaveGetManyMnemonic = (ctx) => {
  return ctx.scene.leave('')
}

const startMakeNewsletter = (ctx) => {
  return ctx.scene.enter('make-newsletter')
}

const leaveMakeNewsletter = (ctx) => {
  return ctx.scene.leave('make-newsletter')
}

const startAddUser = (ctx) => {
  return ctx.scene.enter('add-user')
}

const leaveAddUser = (ctx) => {
  return ctx.scene.leave('add-user')
}

const startDeleteUser = (ctx) => {
  return ctx.scene.enter('delete-user')
}

const leaveDeleteUser = (ctx) => {
  return ctx.scene.leave('delete-user')
}

module.exports = {
  botStart,
  adminPanel,
  userPanel,
  helpText,
  aboutText,
  rulesText,
  startGetMnemonic,
  leaveGetMnemonic,
  startGetManyMnemonic,
  leaveGetManyMnemonic,
  startAddUser,
  leaveAddUser,
  startDeleteUser,
  leaveDeleteUser,
  startMakeNewsletter,
  leaveMakeNewsletter,
}